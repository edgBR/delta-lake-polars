[tool.poetry]
name = "code"
version = "0.1.0"
description = ""
authors = ["Edgar Bahilo edgar-bahilo@b2impact.com"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
black = "^23.11.0"
ruff = "^0.1.6"
pytest = "^7.4.3"
pre-commit = "^3.5.0"
deltalake = "^0.13.0"
polars = {extras = ["connectorx", "deltalake", "fsspec", "numpy", "pyarrow"], version = "^0.19.17"}
azure-identity = "^1.15.0"
azure-storage-blob = "^12.19.0"
pandas = "^2.1.3"
ipdb = "^0.13.13"
fsspec = "^2023.10.0"
adlfs = "^2023.10.0"
azure-keyvault-secrets = "^4.7.0"
pyarrow = "^14.0.1"
python-dotenv = "^1.0.0"
azure-storage-file-datalake = "^12.14.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.ruff]
# Same as Black.
line-length = 120

exclude = [
    "jupyter_notebook_config.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv"]

select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []
